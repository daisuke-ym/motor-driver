/*
  $Id$
  
  各機器の制御を簡単にするためのラッパー関数群
*/

// ----------------------------------------------------------------------
// シリアルデバッグのレベル
#define DEBUGLEVEL 4

// ----------------------------------------------------------------------
// センサ感知の状態
//   0: Low active
//   1: High active
#define DETECT 0

// ----------------------------------------------------------------------
// 3色LEDの色の定義
enum ledcolor {
  LED_BLACK,
  LED_RED,
  LED_GREEN,
  LED_BLUE,
  LED_YELLOW,
  LED_CYAN,
  LED_MAGENTA,
  LED_WHITE,
};

// ----------------------------------------------------------------------
// モータの回転方向
enum motordir {
  CW,
  CCW,
  M_STOP,
};

// ----------------------------------------------------------------------
// メカナムホイールの進行方向
enum mechanumdir {
  MECHA_STOP, // 停止
  MECHA_FW, // 前進
  MECHA_BW, // 後退
  MECHA_LL, // 左行き
  MECHA_RR, // 右行き
  MECHA_TL, // 左旋回
  MECHA_TR, // 右旋回
  MECHA_FL, // 左斜め前
  MECHA_FR, // 右斜め前
  MECHA_BL, // 左斜め後ろ
  MECHA_BR, // 右斜め後ろ
};

// ----------------------------------------------------------------------
// センサ初期化関数
void initSensor();

// ----------------------------------------------------------------------
// モータ初期化関数
void initMotor();

// ----------------------------------------------------------------------
// モータ駆動関数（PWM出力）
void analogOut(int, int, int);

// ----------------------------------------------------------------------
// モータ駆動関数（ON/OFF出力）
void digitalOut(int, int);

// ----------------------------------------------------------------------
// メカナムホイール駆動関数
void mechanum(enum mechanumdir, uint8_t);

// ----------------------------------------------------------------------
// センサ読み込み関数
uint16_t readSensor();
